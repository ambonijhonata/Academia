/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.estruturadados.academia.ghrapic;

import com.estruturadados.academia.controller.CadastrarModalidadeViewController;
import com.estruturadados.academia.database.model.Modalidade;
import java.sql.Connection;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class CadastrarModalidadeView extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastrarModalidadeView
     */
    private CadastrarModalidadeViewController controller;
    private Connection connection;
    private boolean isEdicao = false;
    private Modalidade modalidade;

    public CadastrarModalidadeView(Connection connection, Modalidade modalidade) {
        initComponents();
        this.connection = connection;
        this.modalidade = modalidade;
        controller = new CadastrarModalidadeViewController(this.connection);

        if (modalidade != null) {
            carregarDadosEdicao(modalidade);
        }
    }

    public void carregarDadosEdicao(Modalidade modalidade) {
        isEdicao = true;
        txtModalidade.setText(modalidade.getModalidade());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCadastroModalidade = new javax.swing.JPanel();
        jLabelModalidade = new javax.swing.JLabel();
        txtModalidade = new javax.swing.JTextField();
        jButtonCancelar = new javax.swing.JButton();
        jButtonGravar = new javax.swing.JButton();

        setTitle("Cadastrar Modalidade");

        jPanelCadastroModalidade.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelModalidade.setText("Modalidade:");

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonGravar.setText("Gravar");
        jButtonGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelCadastroModalidadeLayout = new javax.swing.GroupLayout(jPanelCadastroModalidade);
        jPanelCadastroModalidade.setLayout(jPanelCadastroModalidadeLayout);
        jPanelCadastroModalidadeLayout.setHorizontalGroup(
            jPanelCadastroModalidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroModalidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCadastroModalidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCadastroModalidadeLayout.createSequentialGroup()
                        .addComponent(jLabelModalidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtModalidade))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCadastroModalidadeLayout.createSequentialGroup()
                        .addGap(0, 127, Short.MAX_VALUE)
                        .addComponent(jButtonGravar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelar)))
                .addContainerGap())
        );
        jPanelCadastroModalidadeLayout.setVerticalGroup(
            jPanelCadastroModalidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCadastroModalidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCadastroModalidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelModalidade)
                    .addComponent(txtModalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCadastroModalidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonGravar))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCadastroModalidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelCadastroModalidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravarActionPerformed
        // TODO add your handling code here:
        if (txtModalidade.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor informe a modalidade.", "Atenção", JOptionPane.WARNING_MESSAGE);
            txtModalidade.requestFocus();
            return;
        }
        Modalidade modalidadeEditada = new Modalidade(txtModalidade.getText().trim());

        if (!isEdicao) {
            if (controller.inserirModalidade(modalidadeEditada)) {
                JOptionPane.showMessageDialog(null, "Modalidade cadastrada com sucesso.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar modalidade.", "Atenção", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (controller.atualizarModalidade(modalidade, modalidadeEditada)) {
                JOptionPane.showMessageDialog(null, "Modalidade atualizada com sucesso.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar modalidade.", "Atenção", JOptionPane.ERROR_MESSAGE);
            }
        }

        this.dispose();
    }//GEN-LAST:event_jButtonGravarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonGravar;
    private javax.swing.JLabel jLabelModalidade;
    private javax.swing.JPanel jPanelCadastroModalidade;
    private javax.swing.JTextField txtModalidade;
    // End of variables declaration//GEN-END:variables
}
