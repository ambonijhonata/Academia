/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.estruturadados.academia.ghrapic;

import com.estruturadados.academia.controller.CadastrarPlanoViewController;
import com.estruturadados.academia.database.model.Modalidade;
import com.estruturadados.academia.database.model.Plano;
import java.sql.Connection;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class CadastrarPlanosView extends javax.swing.JInternalFrame {

    /**
     * Creates new form CadastrarPlanosView
     */
    private Plano plano;
    private CadastrarPlanoViewController controller;
    private boolean isEdicao = false;

    public CadastrarPlanosView(Connection connection, Plano plano) {
        initComponents();
        this.plano = plano;
        controller = new CadastrarPlanoViewController(connection);
        controller.carregarModalidades(jComboBoxModalidades);

        if (this.plano != null) {
            carregarDadosEdicao(this.plano);
        }
    }

    public void carregarDadosEdicao(Plano plano) {
        isEdicao = true;
        for (int i = 0; i < jComboBoxModalidades.getItemCount(); i++) {
            if (jComboBoxModalidades.getItemAt(i).toString().equals(plano.getModalidade().getModalidade())) {
                jComboBoxModalidades.setSelectedIndex(i);
                break;
            }
        }
        jTextFieldPlano.setText(plano.getPlano());
        jTextFieldValorMensal.setText(String.valueOf(plano.getValorMensal()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelModalidade = new javax.swing.JLabel();
        jComboBoxModalidades = new javax.swing.JComboBox<>();
        jLabelPlano = new javax.swing.JLabel();
        jTextFieldPlano = new javax.swing.JTextField();
        jLabelValorMensal = new javax.swing.JLabel();
        jTextFieldValorMensal = new javax.swing.JTextField();
        jButtonCancelar = new javax.swing.JButton();
        jButtonGravar = new javax.swing.JButton();

        setTitle("Cadastrar Plano");

        jLabelModalidade.setText("Modalidade:");

        jLabelPlano.setText("Plano:");

        jLabelValorMensal.setText("Valor mensal:");

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        jButtonGravar.setText("Gravar");
        jButtonGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonGravar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonCancelar))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabelValorMensal)
                            .addComponent(jLabelModalidade)
                            .addComponent(jLabelPlano))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxModalidades, 0, 180, Short.MAX_VALUE)
                            .addComponent(jTextFieldPlano)
                            .addComponent(jTextFieldValorMensal))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelModalidade)
                    .addComponent(jComboBoxModalidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPlano, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPlano))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelValorMensal)
                    .addComponent(jTextFieldValorMensal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonGravar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravarActionPerformed
        // TODO add your handling code here:
        if (jTextFieldPlano.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor informe a descrição do plano.", "Atenção", JOptionPane.WARNING_MESSAGE);
            jTextFieldPlano.requestFocus();
            return;
        } else if (jTextFieldValorMensal.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Por favor informe a valor do plano.", "Atenção", JOptionPane.WARNING_MESSAGE);
            jTextFieldValorMensal.requestFocus();
            return;
        }
        Modalidade modalidade = new Modalidade(jComboBoxModalidades.getSelectedItem().toString());
        Plano planoEditado = new Plano(modalidade, jTextFieldPlano.getText(), Double.parseDouble(jTextFieldValorMensal.getText()));

        if (!isEdicao) {
            if (controller.inserirPlano(planoEditado)) {
                JOptionPane.showMessageDialog(null, "Plano cadastrado com sucesso.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao cadastrar Plano.", "Atenção", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            if (controller.atualizarPlano(plano, planoEditado)) {
                JOptionPane.showMessageDialog(null, "Plano atualizado com sucesso.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Erro ao atualizar Plano.", "Atenção", JOptionPane.ERROR_MESSAGE);
            }
        }
        this.dispose();
    }//GEN-LAST:event_jButtonGravarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonGravar;
    private javax.swing.JComboBox<Object> jComboBoxModalidades;
    private javax.swing.JLabel jLabelModalidade;
    private javax.swing.JLabel jLabelPlano;
    private javax.swing.JLabel jLabelValorMensal;
    private javax.swing.JTextField jTextFieldPlano;
    private javax.swing.JTextField jTextFieldValorMensal;
    // End of variables declaration//GEN-END:variables
}
